@using Final_Project.Models
@model LocationModel
@*@using Microsoft.Extensions.Configuration
@inject IConfiguration config*@

<head>
    <title>Map</title>
</head>
<!-- Page Content -->
<div id="content" class="grid">
    <div id="ActionBarMap">
        <div class="row">
            <button type="button" id="sidebarCollapse" class="navbar-btn">
                <span></span>
                <span></span>
                <span></span>
            </button>
            <input id="SearchBar" class="col-6" autocomplete="on" type="search" name="search" placeholder="&#xF002 Find a location" />
            <a href="../LocationForm" id="AddLocationBTN" name="AddLocationBTN"> <i class="fas fa-plus"></i></a>
        </div>
    </div>
    <div class="row" id="map"></div>

</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCDQe2Nov8eYcEOSJpHSxo5CIyC9BvMTgk&libraries=places&callback=initMap"
    async defer></script>

<script>
    var LocList = @Html.Raw(Json.Serialize(Model.LocationList));

    function RemoveMarkerFromMap(id) {
        $.ajax({
            //url: '/Home/Remove_Location',
            url: '@Url.Action("Remove_Location", "Home")', //either url works
            type: 'POST',
            data: { lat: MarkerList[id].getPosition().lat(), lon: MarkerList[id].getPosition().lng() },
        });

        MarkerList[id].setMap(null);
    }


    //add marker from right click or search on map
    function AddMarkerFromLatLon(lat, lon) {
         $.ajax({
            //url: '/Home/AddLocationWithLatLon',
            url: '@Url.Action("AddLocationWithLatLon", "Home")', //either url works
            type: 'POST',
            data: { lat: lat, lon: lon },
        });
        window.location.reload(); //reloads page but kinda a shitty way to do it, hopefully will fix later
    }   

</script>


<script src="~/Scripts/MapPageScript.js"></script>