#pragma checksum "C:\Users\levip_000\Desktop\school\ASP.net\Final Project\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eabaa5a8eead4aaeb54345a5cde011124936475c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\levip_000\Desktop\school\ASP.net\Final Project\Views\Home\Index.cshtml"
using Final_Project.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eabaa5a8eead4aaeb54345a5cde011124936475c", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LocationModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Styles/MapPageStyle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/MapPageScript.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(51, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(78, 1095, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1e9864e0902c43369ec39ba43b56fa7f", async() => {
                BeginContext(84, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(90, 74, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "72391576eb7149c28204c4b09b0aeb9a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(164, 487, true);
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>Footsteps</title>
    <!-- Bootstrap -->
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"" integrity=""sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"" crossorigin=""anonymous"">
    <!-- My Style -->
    <!-- My Script -->
    ");
                EndContext();
                BeginContext(651, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b259b70c910748038fa161a8f0e69259", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(701, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(726, 440, true);
                WriteLiteral(@"

    <!-- Font Awesome JS -->
    <script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/solid.js"" integrity=""sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ"" crossorigin=""anonymous""></script>
    <script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js"" integrity=""sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY"" crossorigin=""anonymous""></script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1173, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1175, 3574, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ccf4c3b8930049af830f079dba21ce14", async() => {
                BeginContext(1181, 1866, true);
                WriteLiteral(@"
    <div class=""wrapper"">
        <!-- Sidebar Holder -->
        <nav id=""sidebar"">
            <div class=""sidebar-header"">
                <h3><i class=""fas fa-shoe-prints""></i> Footsteps</h3>
            </div>
            <ul class=""list-unstyled components"">
                <li>
                    <a href=""#""><i class=""fas fa-home""></i> Home</a>
                </li>
                <li>
                    <a href=""#""><i class=""fas fa-chart-line""></i> Dashboard</a>
                </li>
                <li>
                    <a href=""#pageSubmenu"" data-toggle=""collapse"" aria-expanded=""false"" class=""dropdown-toggle""><i class=""fas fa-sliders-h""></i> Themes</a>
                    <ul class=""collapse list-unstyled"" id=""pageSubmenu"">
                        <li>
                            <a onclick=""MidNightTheme()"">Midnight</a>
                        </li>
                        <li>
                            <a onclick=""DarkTheme()"">Dark</a>
                        </li>
");
                WriteLiteral(@"                        <li>
                            <a onclick=""LightTheme()"">Light</a>
                        </li>
                        <li>
                            <a onclick=""DefaultTheme()"">Default</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href=""#""><i class=""fas fa-list-ul""></i> Lists</a>
                </li>
                <li>
                    <a href=""#""><i class=""fas fa-user-circle""></i> Account</a>
                </li>
                <li>
                    <a href=""#""><i class=""fas fa-at""></i> Contact</a>
                </li>
            </ul>
        </nav>
        <!-- Page Content -->
        <div id=""content"" class=""grid"">
            <div id=""ActionBar"">
                <div class=""row"">
");
                EndContext();
                BeginContext(3078, 1664, true);
                WriteLiteral(@"                    <button type=""button"" id=""sidebarCollapse"" class=""navbar-btn"">
                        <span></span>
                        <span></span>
                        <span></span>
                    </button>
                    <input id=""SearchBar"" class=""col-6"" autocomplete=""on"" type=""text"" name=""search"" placeholder=""Find a location"">
                </div>
            </div>
            <div class=""row"" id=""map""></div>

        </div>
        <script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyCDQe2Nov8eYcEOSJpHSxo5CIyC9BvMTgk&libraries=places&callback=initMap""
                async defer></script>

    </div>
    <!-- jQuery CDN - Slim version (=without AJAX) -->
    <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
    <!-- Popper.JS -->
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" ");
                WriteLiteral(@"integrity=""sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
    <!-- Bootstrap JS -->
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>
    <script type=""text/javascript"">
        $(document).ready(function () {
            $('#sidebarCollapse').on('click', function () {
                $('#sidebar').toggleClass('active');
                $(this).toggleClass('active');
            });
        });
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4749, 4893, true);
            WriteLiteral(@"
</html>



<style>
    #ActionBar {
        margin-left: 10px;
        background: #f5f5f5;
    }

    #map {
        margin-left: 0px;
        height: 100%;
    }

    #SearchBar {
        border: none;
        border-radius: 15px;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: #fafafa;
    }

    p {
        font-family: 'Poppins', sans-serif;
        font-size: 1.1em;
        font-weight: 300;
        line-height: 1.7em;
        color: #999;
    }

    a, a:hover, a:focus {
        color: inherit;
        text-decoration: none;
        transition: all 0.3s;
    }

    .navbar {
        padding: 15px 10px;
        background: #fff;
        border: none;
        border-radius: 0;
        margin-bottom: 40px;
        box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
    }

    .navbar-btn {
        box-shadow: none;
        outline: none !important;
        border: none;
    }

    .line {
        width: 100%;
        heigh");
            WriteLiteral(@"t: 1px;
        border-bottom: 1px dashed #ddd;
        margin: 40px 0;
    }

    /* ---------------------------------------------------
        SIDEBAR STYLE
    ----------------------------------------------------- */

    .wrapper {
        display: flex;
        width: 100%;
        align-items: stretch;
        perspective: 1500px;
    }


    #sidebar {
        min-width: 250px;
        max-width: 250px;
        background: #7386D5;
        color: #fff;
        transition: all 0.6s cubic-bezier(0.945, 0.020, 0.270, 0.665);
        transform-origin: bottom left;
    }

        #sidebar.active {
            margin-left: -250px;
            transform: rotateY(100deg);
        }

        #sidebar .sidebar-header {
            padding: 20px;
            background: #6d7fcc;
        }

        #sidebar ul.components {
            padding: 20px 0;
            border-bottom: 1px solid #47748b;
        }

        #sidebar ul p {
            color: #fff;
            pad");
            WriteLiteral(@"ding: 10px;
        }

        #sidebar ul li a {
            padding: 10px;
            font-size: 1.1em;
            display: block;
        }

            #sidebar ul li a:hover {
                color: #7386D5;
                background: #fff;
            }

        #sidebar ul li.active > a, a[aria-expanded=""true""] {
            color: #fff;
            background: #6d7fcc;
        }


    a[data-toggle=""collapse""] {
        position: relative;
    }

    .dropdown-toggle::after {
        display: block;
        position: absolute;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
    }

    ul ul a {
        font-size: 0.9em !important;
        padding-left: 30px !important;
        background: #6d7fcc;
    }

    ul.CTAs {
        padding: 20px;
    }

        ul.CTAs a {
            text-align: center;
            font-size: 0.9em !important;
            display: block;
            border-radius: 5px;
            margin-bottom: ");
            WriteLiteral(@"5px;
        }

    a.download {
        background: #fff;
        color: #7386D5;
    }

    a.article, a.article:hover {
        background: #6d7fcc !important;
        color: #fff !important;
    }



    /* ---------------------------------------------------
        CONTENT STYLE
    ----------------------------------------------------- */
    #content {
        width: 100%;
        padding: 5px;
        min-height: 100vh;
        transition: all 0.3s;
    }

    #sidebarCollapse {
        width: 40px;
        height: 40px;
        background: #f5f5f5;
        cursor: pointer;
    }

        #sidebarCollapse span {
            width: 80%;
            height: 2px;
            margin: 0 auto;
            display: block;
            background: #555;
            transition: all 0.8s cubic-bezier(0.810, -0.330, 0.345, 1.375);
            transition-delay: 0.2s;
        }

            #sidebarCollapse span:first-of-type {
                transform: rotate(45deg) trans");
            WriteLiteral(@"late(2px, 2px);
            }

            #sidebarCollapse span:nth-of-type(2) {
                opacity: 0;
            }

            #sidebarCollapse span:last-of-type {
                transform: rotate(-45deg) translate(1px, -1px);
            }


        #sidebarCollapse.active span {
            transform: none;
            opacity: 1;
            margin: 5px auto;
        }
</style>

<script>
    src = ""https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"";

    /**********************************************************************
     * Purpose: This function creates the initial map object and sets the
     *          properties.
     **********************************************************************/
    var map;
    var LocList = ");
            EndContext();
            BeginContext(9643, 44, false);
#line 315 "C:\Users\levip_000\Desktop\school\ASP.net\Final Project\Views\Home\Index.cshtml"
             Write(Html.Raw(Json.Serialize(Model.LocationList)));

#line default
#line hidden
            EndContext();
            BeginContext(9687, 21965, true);
            WriteLiteral(@";
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 32.854980, lng: 0 }, //centerish of the world
            zoom: 2,
            minZoom: 2,
            streetViewControl: false,   //removes streetview button
            mapTypeControl: false    //remove map/salelite toggle option buttons
        });
        var input = document.getElementById('SearchBar');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.setFields(['address_components', 'geometry', 'icon', 'name']);

        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function () {
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                window.alert(""No details available for input: '"" + place.name + ""'"");
   ");
            WriteLiteral(@"             return;
            }
            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            //Weird little test to exact lat, lon, address from serached place
            var SearchedLocationOptions = ""<div>"" + ""<p>Location: "" + place.geometry.location + ""</p >"" +
                ""<p>"" + ""name: "" + place.name + ""</p></div>"";
            var infowindow = new google.maps.InfoWindow({
                content: SearchedLocationOptions
            });
            marker.addListener('click', function () {
                infowindow.open(map, marker);
            });
           //end of test
        });


        map.addL");
            WriteLiteral(@"istener('rightclick', function (e) {
            var lat = e.latLng.lat();
            var lon = e.latLng.lng();

            var contentString = '<div id=""content"">' +
                '<label class=""control-label"" for=""Title"">Title</label>' +
                '<input id=""title"" name=""title"" class=""form-control"" type=""text"" />' +
                '<label class=""control-label"" for=""Description"">Description</label>' +
                '<textarea id=""Description"" name=""Description"" class=""form-control"" cols=""40""></textarea>' +
                '<br />' +
                '<select class=""form-control"">' +
                '    <option>I have been here</option>' +
                '    <option>I have lived here</option>' +
                '    <option>I want to go here</option>' +
                '</select>' +
                '<button type=""button"" class=""btn btn-default"">' +'<i class=""fas fa-edit""></i>'+'</button>' +
                '<button type=""button"" class=""btn btn-default"">' +'<i class=""fas fa-imag");
            WriteLiteral(@"es""></i>' +'</button>' +
                '<button type=""button"" class=""btn btn-default"">' +'<i class=""fas fa-trash-alt""></i>' +'</button>' +
                '</div>';

            var marker200 = new google.maps.Marker({
                position: { lat: lat, lng: lon },
                map: map,
                icon: {
                    url: ""http://maps.google.com/mapfiles/ms/icons/blue-dot.png""
                }
            });
            marker200.addListener('click', function () {
                infowindow.open(map, marker200);
            });

            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });
        });

        //Add all locations from model to the map
        var i;
        for (i = 0; i < LocList.length; i++) {
            new google.maps.Marker({
                position: { lat : LocList[i].latitude, lng: LocList[i].longitude },
                map: map,
                icon: {
                    url: ""htt");
            WriteLiteral(@"p://maps.google.com/mapfiles/ms/icons/red-dot.png""
                },
                title: LocList[i].name
            });
        }
    }

    /**********************************************************************
     * Purpose: This function changes the map theme to a dark blue theme.
     **********************************************************************/
    function MidNightTheme() {

        map.setOptions({
            styles:
                [
                    {
                        ""featureType"": ""all"",
                        ""elementType"": ""labels.text.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#ffffff""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""all"",
                        ""elementType"": ""labels.text.stroke"",
                        ""stylers"": [
                            {
           ");
            WriteLiteral(@"                     ""color"": ""#000000""
                            },
                            {
                                ""lightness"": 13
                            }
                        ]
                    },
                    {
                        ""featureType"": ""administrative"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#000000""
                            },
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""administrative"",
                        ""elementType"": ""geometry.stroke"",
                        ""stylers"": [
                            {
                                ""color"": ""#144b53""
                            },
                            {
         ");
            WriteLiteral(@"                       ""lightness"": 14
                            },
                            {
                                ""weight"": 1.4
                            }
                        ]
                    },
                    {
                        ""featureType"": ""landscape"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""color"": ""#08304b""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi"",
                        ""elementType"": ""geometry"",
                        ""stylers"": [
                            {
                                ""color"": ""#0c4152""
                            },
                            {
                                ""lightness"": 5
                            },
                            {
                                ""visibility"": ""on");
            WriteLiteral(@"""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi.attraction"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi.attraction"",
                        ""elementType"": ""labels"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi.business"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""simplified""
                   ");
            WriteLiteral(@"         }
                        ]
                    },
                    {
                        ""featureType"": ""poi.business"",
                        ""elementType"": ""labels.text"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi.government"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi.place_of_worship"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
     ");
            WriteLiteral(@"                   ]
                    },
                    {
                        ""featureType"": ""poi.school"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.highway"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#000000""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.highway"",
                        ""elementType"": ""geometry.stroke"",
                        ""stylers"": [
                            {
                                ""color"": ""#0b434f""
                            },
                    ");
            WriteLiteral(@"        {
                                ""lightness"": 25
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.highway.controlled_access"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.arterial"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#000000""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.arterial"",
                        ""elementType"": ""geometry.stroke"",
                        ""stylers"": [
                  ");
            WriteLiteral(@"          {
                                ""color"": ""#0b3d51""
                            },
                            {
                                ""lightness"": 16
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.local"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.local"",
                        ""elementType"": ""geometry"",
                        ""stylers"": [
                            {
                                ""color"": ""#000000""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.local"",
                        ""elem");
            WriteLiteral(@"entType"": ""labels.text"",
                        ""stylers"": [
                            {
                                ""weight"": ""1.19""
                            },
                            {
                                ""visibility"": ""simplified""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""transit"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""color"": ""#146474""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""water"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""color"": ""#021019""
                            }
                        ]
                    }
                ]
        })");
            WriteLiteral(@";
    }

    /**********************************************************************
     * Purpose: This function changes the map theme to the default theme
     **********************************************************************/
    function DefaultTheme() {
        map.setOptions({
            styles:
                [
                    {
                        ""featureType"": ""administrative.country"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""saturation"": ""-35""
                            }
                        ]
                    }
                ]
        });
    }

    /**********************************************************************
     * Purpose: This function changes the map theme to a dark theme
     **********************************************************************/
    function DarkTheme() {
        map.setOptions({
            styles");
            WriteLiteral(@":
                [
                    {
                        ""stylers"": [
                            {
                                ""hue"": ""#ff1a00""
                            },
                            {
                                ""invert_lightness"": true
                            },
                            {
                                ""saturation"": -100
                            },
                            {
                                ""lightness"": 33
                            },
                            {
                                ""gamma"": 0.5
                            }
                        ]
                    },
                    {
                        ""featureType"": ""water"",
                        ""elementType"": ""geometry"",
                        ""stylers"": [
                            {
                                ""color"": ""#2D333C""
                            }
                        ]
                  ");
            WriteLiteral(@"  }
                ]
        });
    }

    /**********************************************************************
     * Purpose: This function changes the map theme to a light theme
     **********************************************************************/
    function LightTheme() {
        map.setOptions({
            styles:
                [
                    {
                        ""featureType"": ""all"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""weight"": ""2.00""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""all"",
                        ""elementType"": ""geometry.stroke"",
                        ""stylers"": [
                            {
                                ""color"": ""#9c9c9c""
                            }
                        ]
                    },");
            WriteLiteral(@"
                    {
                        ""featureType"": ""all"",
                        ""elementType"": ""labels.text"",
                        ""stylers"": [
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""landscape"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""color"": ""#f2f2f2""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""landscape"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#ffffff""
                            }
                        ]
                    },
                    {
         ");
            WriteLiteral(@"               ""featureType"": ""landscape.man_made"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#ffffff""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""poi"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""saturation"": -100
                            },
                            {
                                ""lightness"": 45
                            }
        ");
            WriteLiteral(@"                ]
                    },
                    {
                        ""featureType"": ""road"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#eeeeee""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road"",
                        ""elementType"": ""labels.text.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#7b7b7b""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road"",
                        ""elementType"": ""labels.text.stroke"",
                        ""stylers"": [
                            {
                                ""color"": ""#ffffff""
                            }
                        ]
    ");
            WriteLiteral(@"                },
                    {
                        ""featureType"": ""road.highway"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""simplified""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""road.arterial"",
                        ""elementType"": ""labels.icon"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""transit"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""visibility"": ""off""
                            }
                        ]
                    },
   ");
            WriteLiteral(@"                 {
                        ""featureType"": ""water"",
                        ""elementType"": ""all"",
                        ""stylers"": [
                            {
                                ""color"": ""#46bcec""
                            },
                            {
                                ""visibility"": ""on""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""water"",
                        ""elementType"": ""geometry.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#c8d7d4""
                            }
                        ]
                    },
                    {
                        ""featureType"": ""water"",
                        ""elementType"": ""labels.text.fill"",
                        ""stylers"": [
                            {
                                ""color"": ""#070707""
     ");
            WriteLiteral(@"                       }
                        ]
                    },
                    {
                        ""featureType"": ""water"",
                        ""elementType"": ""labels.text.stroke"",
                        ""stylers"": [
                            {
                                ""color"": ""#ffffff""
                            }
                        ]
                    }
                ]
        });
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LocationModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
