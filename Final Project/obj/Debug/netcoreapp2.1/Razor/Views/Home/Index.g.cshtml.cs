#pragma checksum "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d9dfa19e7439d2f32a342677895c9f913cf1ac1b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
using Final_Project.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d9dfa19e7439d2f32a342677895c9f913cf1ac1b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"312661c40e31fe40035ce4a984bb93d79a82c528", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LocationModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/MapPageScript.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(51, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(53, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be50fdbc5ec14fe5ab5c5aaf7fb8e111", async() => {
                BeginContext(59, 26, true);
                WriteLiteral("\r\n    <title>Map</title>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(92, 822, true);
            WriteLiteral(@"
<!-- Page Content -->
<div id=""content"" class=""grid"">
    <div id=""ActionBarMap"">
        <div class=""row"">
            <button type=""button"" id=""sidebarCollapse"" class=""navbar-btn"">
                <span></span>
                <span></span>
                <span></span>
            </button>
            <input id=""SearchBar"" class=""col-6"" autocomplete=""on"" type=""search"" name=""search"" placeholder=""&#xF002 Find a location"" />
            <a href=""../LocationForm"" id=""AddLocationBTN"" name=""AddLocationBTN""> <i class=""fas fa-plus""></i></a>
        </div>
    </div>
    <div class=""row"" id=""map""></div>

</div>
<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyCDQe2Nov8eYcEOSJpHSxo5CIyC9BvMTgk&libraries=places&callback=initMap""
    async defer></script>

<script>
    var LocList = ");
            EndContext();
            BeginContext(915, 44, false);
#line 27 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
             Write(Html.Raw(Json.Serialize(Model.LocationList)));

#line default
#line hidden
            EndContext();
            BeginContext(959, 163, true);
            WriteLiteral(";\r\n\r\n    //Remove marker from map and db\r\n    function RemoveMarkerFromMap(id) {\r\n        $.ajax({\r\n            //url: \'/Home/Remove_Location\',\r\n            url: \'");
            EndContext();
            BeginContext(1123, 37, false);
#line 33 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
             Write(Url.Action("Remove_Location", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(1160, 403, true);
            WriteLiteral(@"', //either url works
            type: 'POST',
            data: { lat: MarkerList[id].getPosition().lat(), lon: MarkerList[id].getPosition().lng() },
        });

        MarkerList[id].setMap(null);
    }

    //add marker from right click or search on map
    function AddMarkerFromLatLon(lat, lon) {
         $.ajax({
            //url: '/Home/AddLocationWithLatLon',
            url: '");
            EndContext();
            BeginContext(1564, 43, false);
#line 45 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
             Write(Url.Action("AddLocationWithLatLon", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(1607, 385, true);
            WriteLiteral(@"', //either url works
            type: 'POST',
            data: { lat: lat, lon: lon },
        });
        window.location.reload(); //reloads page but kinda a shitty way to do it, hopefully will fix later
    }   

     //Send lat and lon and get back title, description, and DateVisited
    function GetTitleAndDescription(lat, lon) {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(1993, 44, false);
#line 55 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
             Write(Url.Action("GetTitleAndDescription", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(2037, 884, true);
            WriteLiteral(@"', 
            type: 'POST',
            data: { lat: lat, lon: lon },
            success: function (data) {
                var objResult = JSON.parse(JSON.stringify(data)); //parse result into object
                document.getElementById(""Title"").innerHTML = objResult.title;
                document.getElementById(""Description"").innerHTML = objResult.description;
                document.getElementById(""DateVisited"").value = objResult.dateVisited;
            }
        });
    }

    function SaveUpdatesForMarker(id) {
        document.getElementById(""Title"").contentEditable = false;
        document.getElementById(""Description"").contentEditable = false;
        document.getElementById(""DateVisited"").readOnly = true;

        //Will want to add more fields to the data later but these 3 are all i have right now

        $.ajax({
            url: '");
            EndContext();
            BeginContext(2922, 37, false);
#line 75 "C:\Users\levip_000\Documents\GitHub\Footsteps\Final Project\Views\Home\Index.cshtml"
             Write(Url.Action("Update_Location", "Home"));

#line default
#line hidden
            EndContext();
            BeginContext(2959, 447, true);
            WriteLiteral(@"', 
            type: 'POST',
            data: {
                Title: document.getElementById(""Title"").innerHTML,
                Description: document.getElementById(""Description"").innerHTML,
                DateVisited: document.getElementById(""DateVisited"").value,
                lat: MarkerList[id].getPosition().lat(),
                lon: MarkerList[id].getPosition().lng()
            },
        });

    }

</script>


");
            EndContext();
            BeginContext(3406, 50, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ef681ca532de4c9996014ec9b8e4ffe3", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LocationModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
